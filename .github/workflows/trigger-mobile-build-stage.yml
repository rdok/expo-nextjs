################################################################################
# When should I dispatch this action?
#   See https://docs.expo.io/workflow/publishing/#limitations
################################################################################
name: trigger-build-mobile-stage
on:
  workflow_dispatch:
env:
  ENVIRONMENT: stage
  EXPO_USERNAME: ${{ secrets.EXPO_USERNAME }}
  EXPO_CLI_PASSWORD: ${{ secrets.EXPO_PASSWORD }}
jobs:
  trigger_android_build:
    runs-on: ubuntu-latest
    env:
      EXPO_ANDROID_KEYSTORE_JKS_BASE64: ${{ secrets.EXPO_ANDROID_KEYSTORE_JKS_BASE64 }}
      EXPO_ANDROID_KEYSTORE_PATH: apk.js
      EXPO_ANDROID_KEYSTORE_ALIAS: ${{ secrets.EXPO_ANDROID_KEYSTORE_ALIAS }}
      EXPO_ANDROID_KEY_PASSWORD: ${{ secrets.EXPO_ANDROID_KEY_PASSWORD }}
      EXPO_ANDROID_KEYSTORE_PASSWORD: ${{ secrets.EXPO_ANDROID_KEYSTORE_PASSWORD }}
    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - run: yarn
      - run: npx expo login --non-interactive -u ${EXPO_USERNAME}
      - name: npx expo build:android
        run: |
          # base64 encoding value should have disabled wrapped lines; `cat app-name.jks  | base64 --wrap=0`
          echo ${EXPO_ANDROID_KEYSTORE_JKS_BASE64} | base64 --decode > ${EXPO_ANDROID_KEYSTORE_PATH}
          npx expo build:android \
            --release-channel ${ENVIRONMENT} \
            --keystore-alias ${EXPO_ANDROID_KEYSTORE_ALIAS} \
            --keystore-path ${EXPO_ANDROID_KEYSTORE_PATH} \
            --no-wait \
            --type apk
      - name: Remove credentials
        if: ${{ always() }}
        run: |
          rm --force ${EXPO_ANDROID_KEYSTORE_PATH}
          npx expo logout

  trigger_ios_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - run: yarn
      - run: npx expo login --non-interactive -u ${EXPO_USERNAME}
      - name: npx expo build:ios
        run: |
          npx expo build:ios \
          --type simulator \
          --no-wait \
          --release-channel ${ENVIRONMENT}
      - name: Remove credentials
        if: ${{ always() }}
        run: npx expo logout
